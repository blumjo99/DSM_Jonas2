State 0:
          code ::= * statementblock
      (1) statementblock ::= *
          statementblock ::= * statementblock statement

                          code accept
                statementblock shift        11     
                     {default} reduce       1      statementblock ::=

State 1:
          statement ::= IDENTIFIER ASSIGN * ex SEMICOLON
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AMPERSAND ex

                    IDENTIFIER shift-reduce 9      ex ::= IDENTIFIER
                          LPAR shift        8      
                      NUMTOKEN shift-reduce 7      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 8      ex ::= STRTOKEN
                          TRUE shift-reduce 10     ex ::= TRUE
                         FALSE shift-reduce 11     ex ::= FALSE
                            ex shift        12     

State 2:
          statement ::= TRACE * ex SEMICOLON
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AMPERSAND ex

                    IDENTIFIER shift-reduce 9      ex ::= IDENTIFIER
                          LPAR shift        8      
                      NUMTOKEN shift-reduce 7      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 8      ex ::= STRTOKEN
                          TRUE shift-reduce 10     ex ::= TRUE
                         FALSE shift-reduce 11     ex ::= FALSE
                            ex shift        13     

State 3:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AMPERSAND ex
          ex ::= ex AMPERSAND * ex

                    IDENTIFIER shift-reduce 9      ex ::= IDENTIFIER
                          LPAR shift        8      
                      NUMTOKEN shift-reduce 7      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 8      ex ::= STRTOKEN
                          TRUE shift-reduce 10     ex ::= TRUE
                         FALSE shift-reduce 11     ex ::= FALSE
                            ex shift        16     

State 4:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= ex POWER * ex
          ex ::= * ex AMPERSAND ex

                    IDENTIFIER shift-reduce 9      ex ::= IDENTIFIER
                          LPAR shift        8      
                      NUMTOKEN shift-reduce 7      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 8      ex ::= STRTOKEN
                          TRUE shift-reduce 10     ex ::= TRUE
                         FALSE shift-reduce 11     ex ::= FALSE
                            ex shift        19     

State 5:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= ex DIVIDE * ex
          ex ::= * ex POWER ex
          ex ::= * ex AMPERSAND ex

                    IDENTIFIER shift-reduce 9      ex ::= IDENTIFIER
                          LPAR shift        8      
                      NUMTOKEN shift-reduce 7      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 8      ex ::= STRTOKEN
                          TRUE shift-reduce 10     ex ::= TRUE
                         FALSE shift-reduce 11     ex ::= FALSE
                            ex shift        20     

State 6:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= ex TIMES * ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AMPERSAND ex

                    IDENTIFIER shift-reduce 9      ex ::= IDENTIFIER
                          LPAR shift        8      
                      NUMTOKEN shift-reduce 7      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 8      ex ::= STRTOKEN
                          TRUE shift-reduce 10     ex ::= TRUE
                         FALSE shift-reduce 11     ex ::= FALSE
                            ex shift        21     

State 7:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= ex MINUS * ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AMPERSAND ex

                    IDENTIFIER shift-reduce 9      ex ::= IDENTIFIER
                          LPAR shift        8      
                      NUMTOKEN shift-reduce 7      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 8      ex ::= STRTOKEN
                          TRUE shift-reduce 10     ex ::= TRUE
                         FALSE shift-reduce 11     ex ::= FALSE
                            ex shift        18     

State 8:
          ex ::= * LPAR ex RPAR
          ex ::= LPAR * ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AMPERSAND ex

                    IDENTIFIER shift-reduce 9      ex ::= IDENTIFIER
                          LPAR shift        8      
                      NUMTOKEN shift-reduce 7      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 8      ex ::= STRTOKEN
                          TRUE shift-reduce 10     ex ::= TRUE
                         FALSE shift-reduce 11     ex ::= FALSE
                            ex shift        14     

State 9:
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * ex PLUS ex
          ex ::= ex PLUS * ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AMPERSAND ex

                    IDENTIFIER shift-reduce 9      ex ::= IDENTIFIER
                          LPAR shift        8      
                      NUMTOKEN shift-reduce 7      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 8      ex ::= STRTOKEN
                          TRUE shift-reduce 10     ex ::= TRUE
                         FALSE shift-reduce 11     ex ::= FALSE
                            ex shift        17     

State 10:
          statement ::= WRITE * ex SEMICOLON
          ex ::= * LPAR ex RPAR
          ex ::= * NUMTOKEN
          ex ::= * STRTOKEN
          ex ::= * IDENTIFIER
          ex ::= * TRUE
          ex ::= * FALSE
          ex ::= * ex PLUS ex
          ex ::= * ex MINUS ex
          ex ::= * ex TIMES ex
          ex ::= * ex DIVIDE ex
          ex ::= * ex POWER ex
          ex ::= * ex AMPERSAND ex

                    IDENTIFIER shift-reduce 9      ex ::= IDENTIFIER
                          LPAR shift        8      
                      NUMTOKEN shift-reduce 7      ex ::= NUMTOKEN
                      STRTOKEN shift-reduce 8      ex ::= STRTOKEN
                          TRUE shift-reduce 10     ex ::= TRUE
                         FALSE shift-reduce 11     ex ::= FALSE
                            ex shift        15     

State 11:
      (0) code ::= statementblock *
          statementblock ::= statementblock * statement
          statement ::= * WRITE ex SEMICOLON
          statement ::= * TRACE ex SEMICOLON
          statement ::= * IDENTIFIER ASSIGN ex SEMICOLON

                             $ reduce       0      code ::= statementblock
                         WRITE shift        10     
                         TRACE shift        2      
                    IDENTIFIER shift        22     
                     statement shift-reduce 2      statementblock ::= statementblock statement

State 12:
          statement ::= IDENTIFIER ASSIGN ex * SEMICOLON
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AMPERSAND ex

                          PLUS shift        9      
                         MINUS shift        7      
                         TIMES shift        6      
                        DIVIDE shift        5      
                         POWER shift        4      
                     SEMICOLON shift-reduce 5      statement ::= IDENTIFIER ASSIGN ex SEMICOLON
                     AMPERSAND shift        3      

State 13:
          statement ::= TRACE ex * SEMICOLON
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AMPERSAND ex

                          PLUS shift        9      
                         MINUS shift        7      
                         TIMES shift        6      
                        DIVIDE shift        5      
                         POWER shift        4      
                     SEMICOLON shift-reduce 4      statement ::= TRACE ex SEMICOLON
                     AMPERSAND shift        3      

State 14:
          ex ::= LPAR ex * RPAR
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AMPERSAND ex

                          PLUS shift        9      
                         MINUS shift        7      
                         TIMES shift        6      
                        DIVIDE shift        5      
                         POWER shift        4      
                          RPAR shift-reduce 6      ex ::= LPAR ex RPAR
                     AMPERSAND shift        3      

State 15:
          statement ::= WRITE ex * SEMICOLON
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AMPERSAND ex

                          PLUS shift        9      
                         MINUS shift        7      
                         TIMES shift        6      
                        DIVIDE shift        5      
                         POWER shift        4      
                     SEMICOLON shift-reduce 3      statement ::= WRITE ex SEMICOLON
                     AMPERSAND shift        3      

State 16:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AMPERSAND ex
     (17) ex ::= ex AMPERSAND ex *

                          PLUS shift        9      
                          PLUS reduce       17      ** Parsing conflict **
                         MINUS shift        7      
                         MINUS reduce       17      ** Parsing conflict **
                         TIMES shift        6      
                         TIMES reduce       17      ** Parsing conflict **
                        DIVIDE shift        5      
                        DIVIDE reduce       17      ** Parsing conflict **
                         POWER shift        4      
                         POWER reduce       17      ** Parsing conflict **
                     AMPERSAND shift        3      
                     AMPERSAND reduce       17      ** Parsing conflict **
                     {default} reduce       17     ex ::= ex AMPERSAND ex

State 17:
          ex ::= ex * PLUS ex
     (12) ex ::= ex PLUS ex *
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AMPERSAND ex

                         TIMES shift        6      
                        DIVIDE shift        5      
                         POWER shift        4      
                     AMPERSAND shift        3      
                     AMPERSAND reduce       12      ** Parsing conflict **
                     {default} reduce       12     ex ::= ex PLUS ex

State 18:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
     (13) ex ::= ex MINUS ex *
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AMPERSAND ex

                         TIMES shift        6      
                        DIVIDE shift        5      
                         POWER shift        4      
                     AMPERSAND shift        3      
                     AMPERSAND reduce       13      ** Parsing conflict **
                     {default} reduce       13     ex ::= ex MINUS ex

State 19:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
     (16) ex ::= ex POWER ex *
          ex ::= ex * AMPERSAND ex

                         POWER shift        4      
                     AMPERSAND shift        3      
                     AMPERSAND reduce       16      ** Parsing conflict **
                     {default} reduce       16     ex ::= ex POWER ex

State 20:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
          ex ::= ex * DIVIDE ex
     (15) ex ::= ex DIVIDE ex *
          ex ::= ex * POWER ex
          ex ::= ex * AMPERSAND ex

                         POWER shift        4      
                     AMPERSAND shift        3      
                     AMPERSAND reduce       15      ** Parsing conflict **
                     {default} reduce       15     ex ::= ex DIVIDE ex

State 21:
          ex ::= ex * PLUS ex
          ex ::= ex * MINUS ex
          ex ::= ex * TIMES ex
     (14) ex ::= ex TIMES ex *
          ex ::= ex * DIVIDE ex
          ex ::= ex * POWER ex
          ex ::= ex * AMPERSAND ex

                         POWER shift        4      
                     AMPERSAND shift        3      
                     AMPERSAND reduce       14      ** Parsing conflict **
                     {default} reduce       14     ex ::= ex TIMES ex

State 22:
          statement ::= IDENTIFIER * ASSIGN ex SEMICOLON

                        ASSIGN shift        1      

----------------------------------------------------
Symbols:
    0: $:
    1: PLUS
    2: MINUS
    3: TIMES
    4: DIVIDE
    5: POWER
    6: WRITE
    7: SEMICOLON
    8: TRACE
    9: IDENTIFIER
   10: ASSIGN
   11: LPAR
   12: RPAR
   13: NUMTOKEN
   14: STRTOKEN
   15: TRUE
   16: FALSE
   17: AMPERSAND
   18: error:
   19: code: <lambda> WRITE TRACE IDENTIFIER
   20: statementblock: <lambda> WRITE TRACE IDENTIFIER
   21: statement: WRITE TRACE IDENTIFIER
   22: ex: IDENTIFIER LPAR NUMTOKEN STRTOKEN TRUE FALSE
